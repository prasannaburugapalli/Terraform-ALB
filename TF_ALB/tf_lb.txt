resource "aws_lb_target_group" "Alserver_targrp" {
  health_check {
       interval  = 10
       path      = "/"
       protocol  = "HTTP"
       timeout   = 5
       healthy_threshold = 5
       unhealthy_threshold = 2
}
 name     = "tf-lb-tg"
  port     = 80
  protocol = "HTTP"
  target_type = "instance"
  vpc_id   = "${aws_vpc.ALserver_vpc.id}"

}

#creating ALB

resource "aws_lb" "ALserver_ALB" {
  name               = "tf-alb"
  internal           = false
  ip_address_type    = "ipv4"
  load_balancer_type = "application"
  security_groups    = "${[aws_security_group.AL_pub_sg.id]}"
  subnets            = "[aws_subnet.al_pubsub.id,aws_subnet.al_pvtsub.id]"

  enable_deletion_protection = true


  tags = {
    Name = "ALserver_ALB"
  }
}

#Creating Listener
resource "aws_lb_listener" "alb-listener" {
  load_balancer_arn = aws_lb.ALserver_ALB.arn
  port              = "80"
  protocol          = "HTTP"
  default_action {
    type             = "forward"
    target_group_arn = aws_lb_target_group.Alserver_targrp.arn
  }
}
#attachment
resource "aws_lb_target_group_attachment" "ec2-attach" {
  count = length(aws_instance.Alserver_pub)
  target_group_arn = aws_lb_target_group.Alserver_targrp.arn
  target_id        = aws_instance.Alserver_pub[count.index].id

}

